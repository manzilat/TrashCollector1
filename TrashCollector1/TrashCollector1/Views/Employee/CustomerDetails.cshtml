@model TrashCollector1.Models.Customer

@{
    ViewBag.Title = "CustomerDetails";
}

<h2>Customer Details</h2>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FullName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FullName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Phone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Street)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Street)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Zip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Zip)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsConfirmed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsConfirmed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Time)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Time)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SpecialPickupDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SpecialPickupDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AccountSuspendDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AccountSuspendDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AccountSuspendEndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AccountSuspendEndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PickupCompleted)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickupCompleted)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Fee)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Fee)
        </dd>



    </dl>
</div>


<!DOCTYPE html>
<html>
<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        #map {
            height: 520px;
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
            var geocoder;
            var map;
        function initMap() {
            //geocoder = new google.maps.Geocoder();
            //map = new google.maps.Map(document.getElementById('map'), {
            //    center: { lat: -34.397, lng: 150.644 },
            //    zoom: 8
            //});
            //var latlng = new google.maps.LatLng(-34.397, 150.644);//Milwauke
            //var marker = new google.maps.Marker({
            //    position: myLatLng,
            //    map: map,

   
            //});

            geocoder = new google.maps.Geocoder();
            var mapOptions = {
                zoom: 8,
                center: { lat: 43.0115, lng: -87.9735 }

            }
            map = new google.maps.Map(document.getElementById('map'), mapOptions);
            var street = "@ViewBag.Address";
            var zip = "@ViewBag.Zip";
            var address = (street + " " + zip + " ");
            
                
          
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        animation: google.maps.Animation.BOUNCE,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }

    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=&callback=initMap"
            type="text/javascript"></script>

</body>
</html>
