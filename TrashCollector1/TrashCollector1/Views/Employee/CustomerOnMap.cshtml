@model IEnumerable<TrashCollector1.Models.Customer>

@{
    ViewBag.Title = "CustomerOnMap";
}

<h2>Customer On Map</h2>





<!DOCTYPE html>
<html>
<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        var map;
        function initMap() {
            geocoder = new google.maps.Geocoder();
            var latlng = new google.maps.LatLng(-34.397, 150.644);//Milwauke
            var mapOptions = {
                zoom: 8,
                center: latlng
            }
            map = new google.maps.Map(document.getElementById('map'), mapOptions);
@{List<string> address = new List<string>(); }
@foreach (var item in Model)
{

    if (item.Zip == ViewBag.zip)
    {
        string Street = item.Street + ", " + item.Zip.ToString();
        address.Add(Street);
    }
}
            geocoder.geocode({ 'address': address  }, function (results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        animation: google.maps.Animation.BOUNCE, 
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNr9Uk7NztcofHJ5SDnsL2ErNu3jBqOV8&callback=initMap"
            async defer></script>
</body>
</html>